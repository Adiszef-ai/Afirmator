"""
ModuÅ‚ obsÅ‚ugujÄ…cy funkcjonalnoÅ›Ä‡ afirmacji dnia - wersja ulepszona.
"""
import random
import streamlit as st
from config.constants import DAILY_AFFIRMATION_TOPICS
from services.openai_service import OpenAIService
from ui.components import affirmation_card, spacer
from modules.utils import save_to_history

def generate_daily_affirmation(client, user_name):
    """
    Generuje afirmacjÄ™ dnia dla uÅ¼ytkownika.
    
    Args:
        client (OpenAIService): Instancja klienta OpenAI.
        user_name (str): ImiÄ™ uÅ¼ytkownika.
        
    Returns:
        str: Wygenerowana afirmacja dnia lub None w przypadku braku imienia.
    """
    if not user_name:
        return None
        
    # Losowy wybÃ³r tematu afirmacji dnia
    daily_topic = random.choice(DAILY_AFFIRMATION_TOPICS)
    
    # Tworzenie promptu dla afirmacji dnia
    prompt = f"""
    StwÃ³rz krÃ³tkÄ…, inspirujÄ…cÄ… afirmacjÄ™ dnia dla {user_name} w jÄ™zyku polskim, ktÃ³ra:
    1. BÄ™dzie skupiona na temacie: {daily_topic}
    2. Zaczyna siÄ™ od "Ja, {user_name},"
    3. Jest zwiÄ™zÅ‚a (maksymalnie 2-3 zdania)
    4. Ma pozytywny, podnoszÄ…cy na duchu ton
    5. UÅ¼ywa czasu teraÅºniejszego
    6. Jest sformuÅ‚owana w pierwszej osobie
    7. Zawiera element, ktÃ³ry moÅ¼na zastosowaÄ‡ w codziennym Å¼yciu
    """
    
    try:
        return client.generate_affirmation(prompt, max_tokens=120)
    except Exception as e:
        return f"BÅ‚Ä…d podczas generowania afirmacji dnia: {str(e)}"

def display_daily_affirmation_section(openai_service):
    """
    WyÅ›wietla sekcjÄ™ afirmacji dnia z ulepszonym UI.
    
    Args:
        openai_service (OpenAIService): Instancja serwisu OpenAI.
    """
    spacer("2.5rem")
    st.markdown("<h2 style='text-align: center;'>Afirmacja Dnia</h2>", unsafe_allow_html=True)
    st.markdown("""
        <div style="text-align: center; width: 100%;">
            <h8> Rozpocznij swÃ³j dzieÅ„ z pozytywnÄ… afirmacjÄ… </h8>
        </div>
    """, unsafe_allow_html=True)
    spacer("1.5rem")
    
    # Inicjalizacja zmiennych stanu dla edycji
    if 'editing' not in st.session_state:
        st.session_state.editing = False
    if 'edited_affirmation' not in st.session_state and 'daily_affirmation' in st.session_state:
        st.session_state.edited_affirmation = st.session_state.daily_affirmation
    
    # Sprawdzamy czy afirmacja juÅ¼ istnieje w session_state
    if 'daily_affirmation' not in st.session_state or st.session_state.daily_affirmation is None:
        _display_daily_affirmation_input(openai_service)
    else:
        _display_daily_affirmation_content(openai_service)
        
        # WskazÃ³wki dotyczÄ…ce uÅ¼ywania afirmacji dnia - tylko gdy afirmacja jest wygenerowana
        st.markdown("---")
        st.markdown("""
            <div style="padding: 15px; border-radius: 10px; margin-top: 20px;">
                <h5 style="margin: 0;">ğŸ’¡ Jak uÅ¼ywaÄ‡ afirmacji dnia</h5>
                <ul style="text-align: left; margin-top: 0.2rem;">
                    <li>Powtarzaj tÄ™ afirmacjÄ™ kaÅ¼dego ranka, aby rozpoczÄ…Ä‡ dzieÅ„ z pozytywnym nastawieniem</li>
                    <li>MoÅ¼esz jÄ… wypowiadaÄ‡ na gÅ‚os lub zapisaÄ‡ w dzienniku</li>
                    <li>Wizualizuj efekty afirmacji podczas jej wypowiadania</li>
                    <li>UÅ¼ywaj afirmacji dnia jako intencji przewodniej na caÅ‚y dzieÅ„</li>
                    <li>Wieczorem zastanÃ³w siÄ™, jak afirmacja wpÅ‚ynÄ™Å‚a na TwÃ³j dzieÅ„</li>
                </ul>
            </div>
        """, unsafe_allow_html=True)

def _display_daily_affirmation_input(openai_service):
    """
    WyÅ›wietla formularz wprowadzania imienia dla afirmacji dnia.
    
    Args:
        openai_service (OpenAIService): Instancja serwisu OpenAI.
    """
    col1, col2, col3 = st.columns([1, 3, 1])
    
    with col2:
        name_input = st.text_input(
            "Twoje imiÄ™", 
            key="daily_name_input", 
            placeholder="Wpisz tutaj...",
            max_chars=30,
            help="Podaj swoje imiÄ™, aby otrzymaÄ‡ spersonalizowanÄ… afirmacjÄ™"
        )
        
        if st.button("PokaÅ¼ afirmacjÄ™ dnia", key="show_daily_affirmation", use_container_width=True):
            if name_input:
                with st.spinner("ğŸŒŸ TworzÄ™ TwojÄ… afirmacjÄ™ dnia..."):
                    daily_affirmation = generate_daily_affirmation(openai_service, name_input)
                    st.session_state.daily_affirmation_name = name_input
                    st.session_state.daily_affirmation = daily_affirmation
                    st.session_state.edited_affirmation = daily_affirmation
                    # Zapisywanie afirmacji dnia do historii
                    save_to_history(daily_affirmation)
                    st.rerun()
            else:
                st.warning("ProszÄ™ wprowadziÄ‡ swoje imiÄ™!")

def _display_daily_affirmation_content(openai_service):
    """
    WyÅ›wietla wygenerowanÄ… afirmacjÄ™ dnia i opcje audio.
    
    Args:
        openai_service (OpenAIService): Instancja serwisu OpenAI.
    """
    col1, col2, col3 = st.columns([1, 3, 1])
    
    with col2:
        # ObsÅ‚uga trybu edycji
        if st.session_state.editing:
            st.session_state.edited_affirmation = st.text_area(
                "Edytuj afirmacjÄ™:",
                value=st.session_state.edited_affirmation,
                height=150,
                key="edit_daily_affirmation_text"
            )
            if st.button("Zapisz zmiany", use_container_width=True, key="save_daily_affirmation_changes"):
                st.session_state.editing = False
                st.session_state.daily_affirmation = st.session_state.edited_affirmation
                # Dodanie edytowanej afirmacji do historii
                save_to_history(st.session_state.edited_affirmation)
                st.rerun()
        else:
            # WyÅ›wietlenie afirmacji w eleganckiej karcie
            affirmation_card(st.session_state.edited_affirmation)
            
            # Przyciski akcji
            col_a, col_b, col_c = st.columns([1, 1, 1])
            
            with col_a:
                if st.button("Edytuj", use_container_width=True, key="edit_daily_affirmation"):
                    st.session_state.editing = True
                    st.rerun()
            
            with col_b:
                if st.button("Nowa afirmacja", key="new_daily_affirmation", use_container_width=True):
                    with st.spinner("ğŸŒŸ GenerujÄ™ nowÄ… afirmacjÄ™ dnia..."):
                        daily_affirmation = generate_daily_affirmation(openai_service, st.session_state.daily_affirmation_name)
                        st.session_state.daily_affirmation = daily_affirmation
                        st.session_state.edited_affirmation = daily_affirmation
                        # Zapisywanie nowej afirmacji dnia do historii
                        save_to_history(daily_affirmation)
                        st.rerun()
            
            with col_c:
                if st.button("Skopiuj", key="copy_affirmation", use_container_width=True):
                    st.toast("âœ… Skopiowano do schowka!", icon='âœ¨')